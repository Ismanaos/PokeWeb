{"version":3,"sources":["component/Inicio.jsx","component/Card.jsx","component/Cards.jsx","App.js","reportWebVitals.js","index.js"],"names":["Inicio","className","to","Card","props","src","img","alt","href","name","tipos","map","n","Cards","arr","m","sprites","types","a","useState","pokemon","setPokemon","fetch","then","data","json","pokemones","onPokemon","console","log","exact","path","component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2RAgBeA,MAZf,WACI,OACI,qBAAKC,UAAU,UAAf,SACI,cAAC,IAAD,CAAMC,GAAG,UAAT,SACI,wBAAQD,UAAU,QAAlB,yB,OCLD,SAASE,EAAKC,GAEzB,OACI,gCACI,qBAAKC,IAAKD,EAAME,IAAKC,IAAI,KACzB,6BAAI,mBAAGC,KAAMJ,EAAMK,KAAf,SACCL,EAAMK,SAEX,6BAAKL,EAAMM,MAAMC,KAAI,SAAAC,GAAC,OAAIA,UCIvBC,MAZf,YAAuB,IAAPC,EAAM,EAANA,IACZ,OACI,8BACKA,EAAIH,KAAI,SAAAI,GAAC,OAAI,cAACZ,EAAD,CACVG,IAAKS,EAAEC,QACPP,KAAMM,EAAEN,KACRC,MAAOK,EAAEE,c,4CCDzB,kCAAAC,EAAA,+DACgCC,mBAAS,IADzC,mBACSC,EADT,KACkBC,EADlB,cAGQC,MAAM,kCACXC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAC,GACJ,GAAGA,EAAKf,KAAK,CACX,IAAMiB,EAAY,CAChBpB,IAAKkB,EAAKlB,IACVG,KAAMe,EAAKf,KACXC,MAAOc,EAAKP,OAEdI,GAAW,SAAAM,GAAS,4BAAQA,GAAR,CAAmBD,OACvCE,QAAQC,IAAIT,OAblB,gCAiBI,sBAAKnB,UAAU,MAAf,UACE,cAAC,IAAD,CAAO6B,OAAK,EAACC,KAAK,IAAIC,UAAWhC,IACjC,cAAC,IAAD,CAAO+B,KAAK,UAAZ,SACE,cAAC,EAAD,CAAOjB,IAAKM,UApBpB,4C,sBA0Bea,M,2CCtBAC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAD,UACE,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6cb6e951.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport './Inicio.css'\r\n\r\nfunction Inicio(){\r\n    return (\r\n        <div className=\"centrar\">\r\n            <Link to='/inicio'>\r\n                <button className=\"boton\">\r\n                    Entrar\r\n                </button>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Inicio","import React from \"react\";\r\n//import { NavLink } from \"react-router-dom\";\r\n\r\nexport default function Card(props){\r\n\r\n    return (\r\n        <div>\r\n            <img src={props.img} alt=\"\" />\r\n            <h1><a href={props.name}>\r\n                {props.name}\r\n            </a></h1>\r\n            <h3>{props.tipos.map(n => n)}</h3>\r\n        </div>\r\n    );\r\n};\r\n\r\n// ] Input de búsqueda para encontrar pokemons por nombre (La búsqueda será exacta, es decir solo encontrará al pokemon si se coloca el nombre completo)\r\n// [ ] Área donde se verá el listado de pokemons. Al iniciar deberá cargar los primeros resultados obtenidos desde la ruta GET /pokemons y deberá mostrar su:\r\n// Imagen\r\n// Nombre\r\n// Tipos (Electrico, Fuego, Agua, etc)\r\n// [ ] Botones/Opciones para filtrar por tipo de pokemon y por pokemon existente o creado por nosotros\r\n// [ ] Botones/Opciones para ordenar tanto ascendentemente como descendentemente los pokemons por orden alfabético y por fuerza\r\n// [ ] Paginado para ir buscando y mostrando los siguientes pokemons, 12 pokemons por pagina.","import React from 'react'\r\nimport Card from './Card'\r\n\r\nfunction Cards({arr}) {\r\n    return (\r\n        <div>\r\n            {arr.map(m => <Card\r\n                img={m.sprites}\r\n                name={m.name}\r\n                tipos={m.types}\r\n            />)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards\r\n","import './App.css';\nimport Inicio from './component/Inicio.jsx'\nimport {Route} from 'react-router-dom'\nimport { useState } from 'react';\nimport Cards from './component/Cards';\n\n\n\nasync function App() {\n  const [pokemon, setPokemon] = useState([])\n\n  await fetch('http://localhost:3001/pokemons')\n  .then(data => data.json())\n  .then(data => {\n    if(data.name){\n      const pokemones = {\n        img: data.img,\n        name: data.name,\n        tipos: data.types\n      }\n      setPokemon(onPokemon => [...onPokemon, pokemones])\n      console.log(pokemon)\n    }\n  })\n  return (\n    <div className=\"App\">\n      <Route exact path='/' component={Inicio}></Route>\n      <Route path='/inicio' >\n        <Cards arr={pokemon}/>\n      </Route>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}